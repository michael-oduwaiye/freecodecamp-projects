* {
  box-sizing: border-box; /* this fixes the additional sizes on elements with padding and border */
}

html {
  font-size: 16px; /* why html and not body?:
  This is because of the rem-based sizes. It makes scalling the entire site's typography easier. Even if you declare it in the body, when rem units are used, it is still bases on html's font-size, not body's  */
}

body {
  font-family: 'Open Sans', sans-serif; /* always remember to put the font name with space in quotes. Note the use of fallback */
}

.label {
  border: 2px solid black;
  width: 270px; /* this size will increase on the browser. 
  This is because, by default, the browser includes the border and padding when determining the size of an element. This can be fixed/solved using the universal or global selector */
  margin: 20px auto;
  padding: 0 7px;
}

header h1 /*this is to specifically target h1 element within the header */ { 
  
  /* the font-weight property was removed from this selector in order to add it inside the declared ".bold" selector. Bolding a text is used to be used to draw user's attention to some particular text and not all text. This showcases several approaches in typography (the art of styling a text) */
  text-align: center;
  margin: -4px 0;
  letter-spacing: 0.15px;
}

p {
  margin: 0; /* this removes those default spaces around the paragraph element */
  display: flex; /* this is to add horizontal spacing */
  justify-content: space-between;
}

.divider {
  border-bottom: 1px solid #888989;
  margin: 2px 0;
}

.bold {
  font-weight: 800;
}

.large {
  height: 10px;
}

.large, .medium /* this .medium selector will be used later for the thinner bar */{
  background-color: black;
  border: 0; /* this removes the default border of the hr element. But, I can't find a significant change on this rule. */
}

.medium {
  height: 5px;
}

.small-text {
  font-size: 0.85rem; /* which is equal to 13.6px. The rem unit stand for "root em" whose size is relative to the font-size of the root html element. I observe that this unit is mostly associated to font-size */
}


.calories-info {
  display: flex;
  justify-content: space-between;/* this creates space btw the text Calories & 230 */
  align-items: flex-end; /* this makes the 230 to align horizontally with Calories */
}

.calories-info h2 { /*this declaration is made to target h2 */
  margin: 0;
}

.left-container p { /* this targets the word "Calories" in the <p> */
  margin: -5px -2px;
  font-size: 2em; /*that is equal to 2 * 16px */
  font-weight: 700; /* remember the value of the font-weight property does not have a common unis like px,cm...*/
}

.calories-info span { /* this targets the last element (span) of the parent element called .calories-info */
  margin: -7px -2px; /* we added negative margin to move the text (230) up and right */
  font-size: 2.4em;
  font-weight: 700;
}

.right {
  justify-content: flex-end; /* this moves the text (% Daily Value) to the right */
}

.indent {
  margin-left: 1em; /* this means 1 * 16px (font-size of the element where it's used)  = 16px */
}

.double-indent {
  margin-left: 2em;
}

.daily-value p:not(.no-divider) { /* the :not pseudo-class is used to exclude an element with a particular class (.no-divider) from being selected */
  border-bottom: 1px solid #888989;
}

.note {
  font-size: 0.6rem;
  margin: 5px 0;
}